#+DATE:  2023-10-18

#+BEGIN_HTML
<p>
<div align="center">
  <img src="https://helm.sh/img/helm.svg" align="center" width="144px" height="144px"/>
  <h3>Minimal and Opinionated Helm Charts</h3>
  <p><i>... powered by a Norwegian bear üêª</i></p>
</div>

<p>&nbsp;</p>

<div align="center">
  <a href="https://github.com/tommy-skaug/charts/actions/workflows/build-and-publish.yml" class="badge">
    <img src="https://github.com/tommy-skaug/charts/actions/workflows/build-and-publish.yml/badge.svg" alt="Relases building" /></a>

&nbsp;&nbsp;

  <a href="https://github.com/tommy-skaug/charts/actions/workflows/pages/pages-build-deployment" class="badge">
    <img src="https://github.com/tommy-skaug/charts/actions/workflows/pages/pages-build-deployment/badge.svg" alt="Index Updates" />
  </a>
</div>
</p>
<p>&nbsp;</p>
#+END_HTML

Backend-focused and UX optimized minmal charts built for use with deployments based on Flux. Generally 
contains Helm charts for infrastructure and some related to security operations.

This is a Helm Chart repository that provides packages for [[https://helm.sh/][Helm]], the Kubernetes
package manager. The builds are made available on GitHub Releases and on GitHub Pages. 

Some charts only have Docker images available somewhere else or built by me, and others have badly
implemented Charts which I've chosen to simplify: opinionated and minimal. Opinionated means that
they're adapted to [[https://fluxcd.io/][FluxCD]] and uses best practices such as [[https://external-secrets.io/latest/][external-secrets]].

As with everything Kubernetes it is a learning journey, so feel free to open an issue.

Below you'll find an overview of the charts and an intro to get you started.

*** üìñ Overview

- [[charts/conduit][Conduit]]: An efficient and self-contained Matrix server using an embedded RocksDB 
  database.

- [[charts/attic][Attic]]: Nix Binary Cache server that reduces the time to compile and distribute 
  builds ([[https://discourse.nixos.org/t/introducing-attic-a-self-hostable-nix-binary-cache-server/24343][intro post]])

- [[charts/][Dispatch]]: A incident management and coordination system developed by Netflix.

- [[charts/foundationdb][FoundationDB]] (=fdb-operator=): Distributed database with ACID transactions developed by Apple. 
  This buils and deploys, but I don't actively use it at the moment.

- [[charts/hasura-engine][Hasura]]: Connects to databases and services to provide a realtime GraphQL API. I'm a little
  skeptical of their licensing model, but I have tested it and it deploys well.

- [[charts/netbox][Netbox]]: Modeling and docs for IP address management (IPAM) and datacenter 
  infrastructure management (DCIM). I plan to clean up this Helm, but for now it has only been imported.

- [[charts/penpot][Penpot]]: Design and prototyping tool. For visual collaboration on visuals, prototypes, UX and more.

*** Requirements

You may need the following:

- S3 compatible storage
- PostgreSQL

All tests are run on the latest version of Kubernetes and Helm and no consideration is taken to vendor-specific
implementations.

*** Principles

So what makes this repo different from others? It is KISS and Safe of course.

- All secrets and ingresses are defined in a secret external from the chart
- We expect that an ingress terminates external connection and TLS
- Always use object storage over block storage when possible
- Never rely on vendor-specific components
- We prefer open source
- We never leave room for plaintext secrets, a sane default
- We always leave for initContainers
- We use as few values as possible in values.yaml
- Always use external databases and transports
- We always configure for OIDC when possible
- A values file should be possible to read up on in minutes
- We only support the current major version of Kubernetes and the application
- Always enable service accounts
- Use semver for versioning
- A chart should install on a small scale with default values
- All charts are validated for structure and syntax before compilation
If you see a chart that does not comply with these principles, please open an issue.

*** üßë‚Äçüíª Usage

**** Exploration

You can explore this repo by using the following commands if you have the Kubernetes package manager
 installed:

#+BEGIN_SRC shell
# add the package source
helm repo add 252 https://charts.252.no
# or update the repo
helm repo update 252

# search for a specific chart
helm search repo dispatch
# or list all available charts
helm search repo 252 -l 

# show configuration options
helm show values 252/dispatch

# install a chart
helm install dispatch helm-charts/charts/dispatch --namespace=toolbox
#+END_SRC

**** As Code with FluxCD

First take care to setup the chart:

#+BEGIN_SRC yaml
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: 252-charts
  namespace: flux-system
spec:
  interval: 15m
  url: https://charts.252.no
#+END_SRC

You can reference e.g. the Dispatch chart like this:

#+BEGIN_SRC yaml
---
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: &app dispatch
spec:
  interval: 30m
  chart:
    spec:
      chart: dispatch
      version: 0.3.2
      sourceRef:
        kind: HelmRepository
        name: 252-charts
        namespace: flux-system
  maxHistory: 2
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  values:
    envFromSecret: &secret dispatch-secret
[...]
#+END_SRC

Check out the ingress configuration in [[./docs/ingress.org][ingress.org]]

** ü§© Licenses and Gratitude 

Repo was inspired by [[https://gitlab.com/ananace/charts][ananace]] (some parts imported and rewritten).

The general license of this repo is DWTFYWTPB, but respect Apache v2 in some of the repos which were 
built on other's work. See the individual chart directory for details and these applies.
