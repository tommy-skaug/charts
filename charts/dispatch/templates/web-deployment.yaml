{{- if .Values.scheduler.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dispatch.fullname" . }}-web
  labels:
    {{- include "dispatch.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "dispatch.fullname" . }}-web
  template:
    metadata:
      labels:
        app: {{ include "dispatch.fullname" . }}-web
    spec:
      initContainers:
        - name: web-db-upgrade
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: ["dispatch", "database", "upgrade"]
          env: &dispatchEnv
            - name: MJML_PATH
              value: /node_modules/.bin
            - name:  DISPATCH_UI_URL
              value: "{{ .Values.url }}"
            - name:  DATABASE_HOSTNAME
              value: "{{ .Values.postgres.hostname }}"
            - name:  DATABASE_PORT
              value: "{{ .Values.postgres.port }}"
            - name:  DATABASE_NAME
              value: "{{ .Values.postgres.database_name }}"
            {{ if eq .Values.authentication.provider_slug "dispatch-auth-provider-header" }}
            - name:  DISPATCH_AUTHENTICATION_PROVIDER_SLUG
              value: "{{ .Values.authentication.provider_slug }}"
            - name:  DISPATCH_AUTHENTICATION_PROVIDER_HEADER_NAME
              value: "{{ .Values.authentication.header.header_name }}"
            {{ end }} 
          envFrom: &envFrom
            - secretRef:
                name: {{ .Values.envFromSecret }}

        - name: web-plugin-install
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: ["dispatch", "plugins", "install"]
          env: *dispatchEnv
          envFrom: *envFrom

      containers:
        - name: web
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["dispatch", "server", "start", "dispatch.main:app", "--host=0.0.0.0"]
          ports:
            - containerPort: 8000
          env: *dispatchEnv
          envFrom:
            - secretRef:
                name: {{ .Values.envFromSecret }}
{{- end }}