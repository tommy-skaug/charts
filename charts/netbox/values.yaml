replicaCount: 1

image:
  repository: quay.io/netboxcommunity/netbox
  tag: v3.7.1
  pullPolicy: Always

nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80

existingSecret: netbox-secret

extraEnv: {}
# EMAIL_SERVER: localhost
# EMAIL_PORT: 25
# EMAIL_USERNAME: netbox
# EMAIL_TIMEOUT: 5
# EMAIL_FROM: netbox@example.com
# MAX_PAGE_SIZE: 1000
# WEBHOOKS_ENABLED: true

extraEnvFrom: []
# - configMapRef:
#     name: custom-config
# - secretRef:
#     name: custom-secrets

extraSecrets: {}
# EMAIL_PASSWORD: netbox

# Ends up stored as extra.py in the netbox configuration, must be valid Python
extraConfiguration: ''

# Will be stored in plugins.py in the netbox configuration, requires
# using/building a netbox image containing the required plugins, must be valid
# Python
#
# https://github.com/netbox-community/netbox-docker/wiki/Using-Netbox-Plugins
extraPlugins: ''
# PLUGINS = ["netbox_bgp"]
#
# PLUGINS_CONFIG = {
#   "netbox_bgp": {
#     ADD YOUR SETTINGS HERE
#   }
# }

resources: {}
# limits:
#   cpu: 500m
#   memory: 512Mi
# requests:
#   cpu: 500m
#   memory: 512Mi

nodeSelector: {}

tolerations: []

affinity: {}

extraVolumes: []

extraVolumeMounts: []

readinessProbe:
  httpGet:
    port: http
    path: /

livenessProbe:
  httpGet:
    port: http
    path: /

startupProbe:
  tcpSocket:
    port: http
  failureThreshold: 12

persistence:
  enabled: false
  # existingClaim: netbox-data
  # storageClass: "-"
  accessMode: ReadWriteOnce
  size: 10Gi

worker:
  enabled: true

  replicaCount: 1

  resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 150Mi
  # requests:
  #   cpu: 100m
  #   memory: 150Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

# Handles the Netbox 3.0+ housekeeping pod
housekeeping:
  enabled: true

  resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 32Mi
  # requests:
  #   cpu: 100m
  #   memory: 32Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

